//buildscript {
//    apply from: '../../common-versions/versions/versions_own.gradle'
//    apply from: '../../common-versions/versions/versions_external.gradle'
//}

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'maven-publish'
    id 'org.asciidoctor.jvm.convert'
    id 'org.jetbrains.dokka'
}

repositories {
    google()
    mavenCentral()
    mavenLocal()
}

//apply from: '../../common-versions/versioning.gradle'


android {
    compileSdkVersion android_compile_sdk_version.toInteger()
    buildToolsVersion android_build_tools_version

    defaultConfig {

        minSdkVersion android_min_sdk_version
        targetSdkVersion android_target_sdk_version.toInteger()
        versionCode = getVersionCode()
        versionName = version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
        }
        debug{
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation("org.jetbrains.kotlinx:kotlinx-datetime:$androidx_datetime_version")

    implementation "org.slf4j:slf4j-api:$slf4j_version"
    testImplementation 'junit:junit:4.13.2'

    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

}

task sourceJar(type: Jar) {
    from android.sourceSets.main.kotlin.srcDirs
    classifier 'sources'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                artifact(sourceJar)
                artifactId = 'cba9-driver'
            }
            debug(MavenPublication) {
                from components.debug
                artifact(sourceJar)
                artifactId = 'cba9-driver-debug'

            }
        }
    }
}

publishing {
    publications.all {
        pom {
            name = 'CBA9 Banknote Acceptor Driver Library'
            description = 'A library implementing the SSP protocol for CBA9 Banknopte Acceptors'
            licenses {
                license {
                    name = pom_licenseName
                    url = pom_licenseUrl
                }
            }
            developers { developer { name = pom_developer } }
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ingonoka/cba9-driver")
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("TOKEN")
            }
        }
    }
}

dokkaHtmlPartial {
    moduleName.set("CBA9 Banknote Acceptor Driver Library")
    dokkaSourceSets {
        configureEach {
            includes.from("module.md")
        }
    }
}
